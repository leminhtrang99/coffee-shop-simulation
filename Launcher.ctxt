#BlueJ class context
comment0.target=Launcher
comment1.params=args
comment1.target=Launcher(java.lang.String[])
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Launcher\n
comment10.params=
comment10.target=void\ createOutputFile()
comment10.text=\n\ A\ method\ that\ writes\ an\ output\ file\ from\ the\ processed\ data\n
comment11.params=
comment11.target=float\ calculateTotalProfit()
comment11.text=\n\ @return\ \ \ \ the\ total\ revenue\ in\ a\ day\ of\ the\ coffee\ shop\n
comment12.params=
comment12.target=float\ calculateTotalCost()
comment12.text=\n\ @return\ \ \ \ \ the\ total\ cost\ in\ a\ day\ of\ the\ coffee\ shop\n
comment13.params=
comment13.target=float\ calculateNetProfit()
comment13.text=\n\ @return\ \ \ \ \ the\ net\ profit\ in\ a\ day\ of\ the\ coffee\ shop\n
comment14.params=
comment14.target=float\ calculateAverageWaitDuration()
comment14.text=\n\ @return\ \ \ \ \ the\ average\ wait\ duration\ of\ the\ customers\n
comment15.params=
comment15.target=float\ findMaxWaitDuration()
comment15.text=\n\ @return\ \ \ \ \ the\ maximum\ wait\ duration\ of\ the\ customers\n
comment16.params=
comment16.target=float\ calculateOverflowRate()
comment16.text=\n\ @return\ \ \ \ \ the\ maximum\ wait\ duration\ of\ the\ customers\n
comment17.params=c
comment17.target=void\ calculateWaitData(Customer)
comment17.text=\n\ A\ method\ to\ calculate\ wait\ duration\ of\ the\ customers\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\n\ @param\ \ \ args\ \ \ the\ number\ of\ cashiers\n
comment3.params=
comment3.target=void\ run()
comment4.params=arrival
comment4.target=int\ convertTimeToSecond(java.lang.String)
comment4.text=\n\ A\ method\ that\ converts\ the\ strings\ of\ time\ stamps\ to\ seconds\ from\ 12AM\n\ @param\ \ \ \ \ arrival\ \ \ a\ string\ of\ time\ stamp\n\ @return\ \ \ \ the\ time\ duration\ (in\ seconds)\ from\ 12AM\ to\ the\ time\ the\ string\ indicates\n
comment5.params=e
comment5.target=void\ processArrival(Event)
comment5.text=\n\ A\ method\ that\ processes\ an\ arrival\ event\n\ @param\ \ \ \ \ e\ \ \ \ \ an\ arrival\ event\n
comment6.params=e
comment6.target=void\ processDeparture(Event)
comment6.text=\n\ A\ method\ that\ processes\ a\ departure\ event\n\ @param\ \ \ \ \ e\ \ \ \ \ a\ departure\ event\n
comment7.params=
comment7.target=Customer\ serveCustomer()
comment8.params=e\ firstCustomerInLine
comment8.target=void\ createDepartureEvent(Event,\ Customer)
comment8.text=\n\ A\ method\ that\ creates\ a\ departure\ event\ for\ the\ customer\ recently\ served\n\ @param\ \ \ \ e\ \ \ \ \ \ the\ previous\ event\ being\ processed\n\ @param\ \ \ \ firstCustomerInLine\ \ \ \ \ \ \ the\ element\ at\ the\ front\ of\ the\ Linked\ List\ \ \ \ \n
comment9.params=inputFile
comment9.target=java.lang.String\ readInputFile(java.io.File)
comment9.text=\n\ A\ method\ that\ reads\ an\ input\ file\ and\ return\ a\ string\n\ @param\ \ \ inputFile\ \ \ the\ file\ for\ the\ program\ to\ read\ from\n
numComments=18
